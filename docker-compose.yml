version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: travelconnect-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      MONGODB_URI: ${MONGODB_URI}
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${PORT:-3002}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:4200,http://frontend:80}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:4200}
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "${BACKEND_PORT:-3002}:3002"
    networks:
      - travelconnect-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3002/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: travelconnect-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    ports:
      - "${FRONTEND_PORT:-4200}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - travelconnect-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  backend_uploads:
    driver: local

networks:
  travelconnect-network:
    driver: bridge
