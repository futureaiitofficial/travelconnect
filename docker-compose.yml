version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: travelconnect-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: travelconnect123
      MONGO_INITDB_DATABASE: travelconnect
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - travelconnect-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: travelconnect-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:travelconnect123@mongodb:27017/travelconnect?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      PORT: 3002
      CORS_ORIGIN: http://localhost:4200,http://frontend:80
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "3002:3002"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - travelconnect-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3002/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: travelconnect-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    ports:
      - "4200:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - travelconnect-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongodb_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  travelconnect-network:
    driver: bridge
